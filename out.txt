.data
fac_computefac_result: .word 0, 0, 0, 0
fac_computefac_bool: .word 0
fac_computefac_a: .word 0
fac_computefac_b: .word 0
fac_computefac_c: .word 0
.text
exe_main:
  #sout
exe_fac_computefac:
sw $fp, 0($sp)
addiu $sp, $sp, -4
li $a0, 9
sw $a0, 0($sp)
addiu $sp, $sp, -4
li $a0, 8
sw $a0, 0($sp)
addiu $sp, $sp, -4
li $a0, 7
sw $a0, 0($sp)
addiu $sp, $sp, -4
jal def_fac_computefac
# eo_sout
  b end_program

class_fac:
def_fac_computefac:
move $fp, $sp
sw $ra, 0($sp)
addiu $sp, $sp, -4
# cmds do metodo
la $t1, fac_computefac_b
lw $a0, 0($t1)
# Computou a expressao
la $t1, fac_computefac_result
sw $a0, 8($t1) #Atribuiu a posicao 2 do array
li $a0, 4
# Computou a expressao
la $t1, fac_computefac_a
sw $a0, 0($t1) #Atribuiu a variavel
lw $a0, 8($fp) # Pega arg do metodo
# Computou a expressao
la $t1, fac_computefac_b
sw $a0, 0($t1) #Atribuiu a variavel
la $t1, fac_computefac_b
lw $a0, 0($t1) # Acessa variavel
# Computou a expressao
la $t1, fac_computefac_c
sw $a0, 0($t1) #Atribuiu a variavel
# retorno
la $t1, fac_computefac_b
lw $a0, 0($t1) # Acessa variavel
# prepara saida
lw $ra, 4($sp)
addiu $sp, $sp, 20
lw $fp, 0($sp)
jr $ra

end_program: